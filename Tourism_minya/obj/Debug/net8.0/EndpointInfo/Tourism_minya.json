{
  "openapi": "3.0.1",
  "info": {
    "title": "Tourism_Minya System API",
    "description": "?? Tourism_Minya System API - Manage users, Places ",
    "contact": {
      "name": "Basma Khalaf",
      "email": "basmakhalaf974@gmail.com"
    },
    "version": "v1"
  },
  "paths": {
    "/api/Auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Registers a new user with the system.",
        "requestBody": {
          "description": "The user registration data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Authenticates a user and returns a JWT token on successful login.",
        "requestBody": {
          "description": "The login credentials.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/AssignRole": {
      "post": {
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "roleName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/me": {
      "get": {
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/AllUsers": {
      "get": {
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/change-password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/forgot-password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Auth/reset-password": {
      "post": {
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Center/GetAll": {
      "get": {
        "tags": [
          "Center"
        ],
        "summary": "Retrieves a list of all Centers.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Center/GetbyId/{id}": {
      "get": {
        "tags": [
          "Center"
        ],
        "summary": "Retrieves a specific Center by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Center ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Center/PostType": {
      "post": {
        "tags": [
          "Center"
        ],
        "summary": "Creates a new Center.\r\nUses AutoMapper to map the DTO to the domain entity.",
        "requestBody": {
          "description": "The Center data transfer object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CenterDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CenterDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CenterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Center/PutCenter/{id}": {
      "put": {
        "tags": [
          "Center"
        ],
        "summary": "Updates an existing Center by ID.\r\nUses AutoMapper to map the DTO to the domain entity.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Center to update.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated Center DTO.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CenterDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CenterDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CenterDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Center/Delete/{id}": {
      "delete": {
        "tags": [
          "Center"
        ],
        "summary": "Deletes a Center by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Center ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Roles/{roleName}": {
      "post": {
        "tags": [
          "Roles"
        ],
        "parameters": [
          {
            "name": "roleName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TourismType/GetAll": {
      "get": {
        "tags": [
          "TourismType"
        ],
        "summary": "Retrieves a list of all Tourism Types.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TourismType/GetbyId/{id}": {
      "get": {
        "tags": [
          "TourismType"
        ],
        "summary": "Retrieves a specific Tourism Type by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Tourism Type ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TourismType/PostType": {
      "post": {
        "tags": [
          "TourismType"
        ],
        "summary": "Creates a new Tourism Type.\r\nUses AutoMapper to map the DTO to the domain entity.",
        "requestBody": {
          "description": "The TourismType data transfer object.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TourismTypeDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TourismTypeDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TourismTypeDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TourismType/PutTourismType/{id}": {
      "put": {
        "tags": [
          "TourismType"
        ],
        "summary": "Updates an existing Tourism Type by ID.\r\nUses AutoMapper to map the DTO to the domain entity.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the Tourism Type to update.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The updated TourismType DTO.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TourismTypeDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TourismTypeDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TourismTypeDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/TourismType/Delete/{id}": {
      "delete": {
        "tags": [
          "TourismType"
        ],
        "summary": "Deletes a Tourism Type by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The Tourism Type ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CenterDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChangePasswordDto": {
        "type": "object",
        "properties": {
          "currentPassword": {
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterUserDto": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResetPasswordDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "newPassword": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResetPasswordRequestDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TourismTypeDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Bearer {token}\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}